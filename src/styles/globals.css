@tailwind base;
@tailwind components;
@tailwind utilities;
:after,
:before {
  box-sizing: border-box;
  border: 0 solid;
}

:after,
:before {
  --tw-content: "";
}

html {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  font-family: Inter, -apple-system, BlinkMacSystemFont, Segoe\UI, Roboto,
    Oxygen, Ubuntu, Cantarell, Open\Sans, Helvetica\Neue, sans-serif;
  font-feature-settings: normal;
}

body {
  margin: 0;
  line-height: inherit;
}
:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
  --tw-ring-inset: inset;
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(0 79 193 / var(--tw-ring-opacity));
}

:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
  --tw-ring-inset: inset;
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(0 79 193 / var(--tw-ring-opacity));
}

.theme-dark :not(.theme-light) :focus:not(.theme-light) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.theme-dark :not(.theme-light) :focus-visible:not(.theme-light) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

:focus.theme-dark {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

:focus-visible.theme-dark {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

.gradient_dot {
  @apply translate-x-[11px] translate-y-[358.547px];
  background: linear-gradient(
    90deg,
    rgb(15, 98, 254) 0%,
    rgb(138, 63, 252) 100%
  );
}

.theme-dark:ring-offset-dark-focus-border.theme-dark {
  --tw-ring-offset-color: #fff;
}
.text-utility-label-01 {
  @apply text-xs leading-4 font-normal text-white;
}
.text-dark-text-strong {
  @apply text-white;
}
.xl:text-fluid-xl-heading-06 {
  @apply text-5xl leading-[3.5rem] font-bold;
}
.lg:text-fluid-lg-heading-06 {
  @apply text-[2.625rem] leading-[3.125rem] font-semibold;
}
.md:text-fluid-md-heading-06 {
  @apply text-4xl leading-[4.75rem] font-bold;
}
.text-fluid-sm-heading-06 {
  @apply text-[1.75rem] leading-[4.75rem] font-bold;
}
.xl:text-fluid-xl-display-02 {
  @apply text-6xl leading-[4.375rem] font-bold;
}
.lg:text-fluid-lg-display-02 {
  @apply text-[3.375rem] leading-[4rem] font-bold;
}
.md:text-fluid-md-display-02 {
  @apply text-[2.625rem] leading-[3.125rem] font-bold;
}
.sm:text-fluid-sm-display-02 {
  @apply text-[2rem] leading-10 font-bold;
}
.xl:text-fluid-xl-display-03 {
  @apply text-[4.75rem] leading-[5.375rem] font-light;
}
.lg:text-fluid-lg-display-03 {
  @apply text-6xl leading-[4.375rem] font-light;
}
.md:text-fluid-md-display-03 {
  @apply text-[3.375rem] leading-[4rem] font-light;
}
.text-light-text-strong {
  @apply text-[#424248];
}

.prose {
  @apply text-[color:var(--tw-prose-body)] max-w-prose;
}

.text-heading-compact-01 {
  @apply text-sm leading-[1.125rem] font-semibold;
}

.content {
  @apply max-h-0 overflow-hidden transition-all  bg-[white] rounded-md border-b-[#e8e8ea] border-b border-solid;
}
.content.show {
  @apply h-auto max-h-[625rem] transition-all  bg-[white] rounded-md;
}
@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}
.text-light-text-on-color {
  @apply text-[#fff];
}
.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.max-w-[24ch] {
  @apply max-w-[27ch];
}
.prose :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose
  :where(blockquote p:first-of-type):not(
    :where([class~="not-prose"] *)
  ):before {
  content: open-quote;
}

.prose
  :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *)):after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *)):before {
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *)):after {
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding: 0.8571429em 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)):before {
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)):after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose
  :where(.prose > ul > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose
  :where(.prose > ul > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose
  :where(.prose > ol > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose
  :where(.prose > ol > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding: 0.5714286em;
}

.prose
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"] *)
  ) {
  padding-left: 0;
}

.prose
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"] *)
  ) {
  padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-base {
  font-size: 1rem;
  line-height: 1.75;
}

.prose-base :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  font-weight: 400;
  line-height: 1.5rem;
}

.prose-base :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  font-size: 1.5rem;
  line-height: 1.875rem;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
  font-weight: 300;
}

.prose-base :where(blockquote):not(:where([class~="not-prose"] *)) {
  margin-top: 1.5rem;
  margin-bottom: 1.6em;
  padding-left: 1em;
  font-weight: 300;
  line-height: 1.875rem;
}

.prose-base :where(h1):not(:where([class~="not-prose"] *)) {
  font-size: 3.375rem;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 4rem;
  font-weight: 300;
}

.prose-base :where(h2):not(:where([class~="not-prose"] *)) {
  font-size: 2.625rem;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 3.125rem;
  font-weight: 400;
}

.prose-base :where(h3):not(:where([class~="not-prose"] *)) {
  font-size: 2.25rem;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 2.75rem;
  font-weight: 700;
}

.prose-base :where(h4):not(:where([class~="not-prose"] *)) {
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 2.25rem;
  font-size: 1.75rem;
  font-weight: 700;
}

.prose-base :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose-base :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose-base :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose-base :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-base :where(figcaption):not(:where([class~="not-prose"] *)) {
  font-size: 0.75rem;
  line-height: 1rem;
  margin-top: 0.8571429em;
  font-weight: 400;
}

.prose-base :where(code):not(:where([class~="not-prose"] *)) {
  font-size: 0.75rem;
  font-weight: 400;
  line-height: 1rem;
}

.prose-base :where(h2 code):not(:where([class~="not-prose"] *)) {
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1.75rem;
}

.prose-base :where(h3 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.9em;
}

.prose-base :where(pre):not(:where([class~="not-prose"] *)) {
  font-size: 0.75rem;
  line-height: 1rem;
  margin-top: 1.5em;
  margin-bottom: 1.5em;
  border-radius: 0;
  padding: 0.75em 1em;
  font-weight: 400;
}

.prose-base :where(ol):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose-base :where(ul):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose-base :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose-base :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose-base :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose-base
  :where(.prose-base > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose-base
  :where(.prose-base > ul > li > :first-child):not(
    :where([class~="not-prose"] *)
  ) {
  margin-top: 1.25em;
}

.prose-base
  :where(.prose-base > ul > li > :last-child):not(
    :where([class~="not-prose"] *)
  ) {
  margin-bottom: 1.25em;
}

.prose-base
  :where(.prose-base > ol > li > :first-child):not(
    :where([class~="not-prose"] *)
  ) {
  margin-top: 1.25em;
}

.prose-base
  :where(.prose-base > ol > li > :last-child):not(
    :where([class~="not-prose"] *)
  ) {
  margin-bottom: 1.25em;
}

.prose-base
  :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose-base :where(hr):not(:where([class~="not-prose"] *)) {
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose-base :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(table):not(:where([class~="not-prose"] *)) {
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose-base :where(thead th):not(:where([class~="not-prose"] *)) {
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose-base :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose-base :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose-base :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding: 0.5714286em;
}

.prose-base
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"] *)
  ) {
  padding-left: 0;
}

.prose-base
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"] *)
  ) {
  padding-right: 0;
}

.prose-base
  :where(.prose-base > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base
  :where(.prose-base > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-base :where(h5):not(:where([class~="not-prose"] *)) {
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1.75rem;
  margin-top: 1.25em;
  margin-bottom: 0.375em;
}

.prose-base :where(h6):not(:where([class~="not-prose"] *)) {
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.5rem;
  margin-top: 1em;
  margin-bottom: 0.25em;
}

.aspect-w-3 {
  position: relative;
  padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
  --tw-aspect-w: 3;
}

.aspect-w-3 > * {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.aspect-h-2 {
  --tw-aspect-h: 2;
}

.aspect-w-\[400\] {
  position: relative;
  padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
  --tw-aspect-w: 400;
}

.aspect-w-\[400\] > * {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.aspect-h-\[69\] {
  --tw-aspect-h: 69;
}

.aspect-w-16 {
  position: relative;
  padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
  --tw-aspect-w: 16;
}

.aspect-w-16 > * {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.aspect-h-9 {
  --tw-aspect-h: 9;
}

.pointer-events-none {
  pointer-events: none;
}
.bg-dark-layer-hover-02:hover {
  @apply bg-[rgb(83_83_91/var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.border-dark-border-subtle-02 {
  @apply border-[rgb(83_83_91_/_var(--tw-border-opacity))];
  --tw-border-opacity: 1;
}
.border-dark-border-interactive {
  @apply border-[rgb(55_131_249_/_var(--tw-border-opacity))];
  --tw-border-opacity: 1;
}
.border-transparent {
  @apply border-[#00000000];
}
.border-light-notification-border-low-contrast-info {
  @apply border-[rgb(161_190_251_/_var(--tw-border-opacity))];
  --tw-border-opacity: 1;
}
.border-light-notification-border-low-contrast-success {
  @apply border-[rgb(132_225_147_/_var(--tw-border-opacity))];
  --tw-border-opacity: 1;
}
.border-light-notification-border-low-contrast-warning {
  @apply border-[rgb(255_222_92_/_var(--tw-border-opacity))];
  --tw-border-opacity: 1;
}
.border-light-notification-border-low-contrast-error {
  @apply border-[rgb(255_171_164_/_var(--tw-border-opacity))];
  --tw-border-opacity: 1;
}
.border-light-border-strong-01 {
  @apply border-[rgb(106_106_115_/_var(--tw-border-opacity))];
  --tw-border-opacity: 1;
}
.border-transparent {
  @apply border-[#00000000];
}
.border-light-border-subtle-01 {
  @apply border-[rgb(227_227_232_/_var(--tw-border-opacity))];
  --tw-border-opacity: 1;
}
.bg-light-field-01 {
  @apply bg-[rgb(247_247_252_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-light-button-primary {
  @apply bg-[rgb(0_103_230_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-light-button-secondary {
  @apply bg-[rgb(51_51_58_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-transparent {
  @apply bg-[#00000000];
}
.bg-light-button-danger {
  @apply bg-[rgb(196_6_26_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-light-button-danger-secondary {
  @apply bg-[rgb(255_213_209_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-light-layer-01 {
  @apply bg-[rgb(239_239_240_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-navigation-layer2 {
  @apply bg-[#19191fb8];
}
.bg-navigation-layer3 {
  @apply bg-[#3d3d44b8];
}

.bg-navigation-layer1 {
  @apply bg-[#33333ab8];
}

.NavigationMenuViewport {
  @apply animate-[heightAnimationIn_0.3s_ease];
}

.lg:grid-cols-3 {
  @apply grid-cols-3;
}

.md:grid-cols-2 {
  @apply grid-cols-2;
}
.bg-dark-text-subtle {
  @apply bg-[rgb(169_169_178_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-navigation-layer1 {
  @apply bg-[#33333ab8];
}
.bg-light-notification-background-low-contrast-info {
  @apply bg-[rgb(240_243_255_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-light-notification-background-low-contrast-success {
  @apply bg-[rgb(230_249_231_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-light-notification-background-low-contrast-warning {
  @apply bg-[rgb(255_249_226_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-light-notification-background-low-contrast-error {
  @apply bg-[rgb(255_234_231_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-light-background-default {
  @apply bg-[rgb(255_255_255_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-dark-background-default,
.bg-light-text-strong {
  @apply bg-[rgb(25_25_31_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-dark-layer-01 {
  @apply bg-[rgb(42_42_49_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-ref-neutral-neutral5 {
  @apply bg-[rgb(16_16_20_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-key-colors-white {
  @apply bg-[rgb(255_255_255_/_var(--tw-bg-opacity))];
  --tw-bg-opacity: 1;
}
.bg-opacity-70 {
  --tw-bg-opacity: 0.7;
}
.bg-opacity-0 {
  --tw-bg-opacity: 0;
}
.bg-\[linear-gradient\(to_left\2c
  var\(--tw-gradient-from\)_72\%\2c
  var\(--tw-gradient-to\)100\%\)\] {
  @apply bg-[linear-gradient(_to_left,var(--tw-gradient-from)_72%,var(--tw-gradient-to)_100%_)];
}

.NavigationMenuViewport {
  will-change: height, width;
}

.NavigationMenuViewport[data-state="open"] {
  animation: heightAnimationIn 0.3s ease;
}

.NavigationMenuViewport[data-state="closed"] {
  animation: heightAnimationOut 0.3s ease;
}
